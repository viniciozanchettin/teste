name: CI & Deploy (python3)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    name: Run unit tests (python3)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies (python3)
        run: |
          python3 -m pip install --upgrade pip
          if [ -f requirements.txt ]; then python3 -m pip install -r requirements.txt; fi

      - name: Run tests (unittest)
        run: python3 -m unittest discover -s tests -p "test_*.py" -v

  deploy:
    name: SSH rsync deploy (python3)
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install rsync (runner)
        run: |
          sudo apt-get update
          sudo apt-get install -y rsync openssh-client
          rsync --version

      - name: Setup SSH key
        run: |
          install -m 700 -d ~/.ssh
          # grava a chave sem newline extra e remove CRLF se veio do Windows
          printf '%s' "${SSH_KEY}" > ~/.ssh/id_deploy
          sed -i 's/\r$//' ~/.ssh/id_deploy
          chmod 600 ~/.ssh/id_deploy
          # não falha se o host não responder aqui
          ssh-keyscan -T 10 -p "${SSH_PORT}" "${SSH_HOST}" >> ~/.ssh/known_hosts
        env:
          SSH_KEY:  ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}

      - name: Rsync source to remote host
        run: >
          rsync -azv --delete
          --exclude ".git" --exclude ".github" --exclude ".venv"
          -e "ssh -i ~/.ssh/id_deploy -o StrictHostKeyChecking=no -p ${SSH_PORT}"
          ./ ${SSH_USER}@${SSH_HOST}:${APP_DIR}/
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          APP_DIR:  ${{ secrets.APP_DIR }}

      # depois do "Rsync source to remote host"
      - name: Setup venv + deps e (re)subir Gunicorn
        run: |
          ssh -i ~/.ssh/id_deploy -o StrictHostKeyChecking=no -p "${SSH_PORT}" \
          "${SSH_USER}@${SSH_HOST}" bash -lc "
          set -e
          APP_DIR='${APP_DIR}'
          VENV=\"\$APP_DIR/.venv\"
          cd \"\$APP_DIR\"

          [ -d \"\$VENV\" ] || python3 -m venv \"\$VENV\"
          \"\$VENV/bin/python3\" -m pip install --upgrade pip
          [ -f requirements.txt ] && \"\$VENV/bin/pip\" install -r requirements.txt || true

          # para anterior se estiver rodando
          if [ -f gunicorn.pid ] && kill -0 \$(cat gunicorn.pid) 2>/dev/null; then
            kill -TERM \$(cat gunicorn.pid) || true
            sleep 2
          fi

          # sobe nova
          nohup \"\$VENV/bin/gunicorn\" -w 2 -b 0.0.0.0:8000 app.app:app \
          > \"\$APP_DIR/gunicorn.log\" 2>&1 &

          echo \$! > gunicorn.pid
          "
        env:
          SSH_HOST:  ${{ secrets.SSH_HOST }}
          SSH_USER:  ${{ secrets.SSH_USER }}
          SSH_PORT:  ${{ secrets.SSH_PORT }}
          APP_DIR:   ${{ secrets.APP_DIR }}
